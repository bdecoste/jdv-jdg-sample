{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "annotations": {
            "iconClass": "icon-jboss",
            "description": "Application template for EAP 6 applications built using S2I.",
            "tags": "eap,javaee,java,jboss,xpaas",
            "version": "1.4.0"
        },
        "name": "datavirt63-sample-s2i"
    },
    "labels": {
        "template": "datavirt63-sample-s2i",
        "xpaas": "1.4.0"
    },
    "parameters": [
        {
            "description": "The name for the application.",
            "name": "APPLICATION_NAME",
            "value": "datavirt",
            "required": true
        },
        {
            "description": "Custom hostname for http service route.  Leave blank for default hostname, e.g.: <application-name>-<project>.<default-domain-suffix>",
            "name": "HOSTNAME_HTTP",
            "value": "",
            "required": false
        },
        {
            "description": "Custom hostname for https service route.  Leave blank for default hostname, e.g.: <application-name>.<project>.<default-domain-suffix>",
            "name": "HOSTNAME_HTTPS",
            "value": "",
            "required": false
        },
        {
            "description": "Git source URI for application",
            "name": "SOURCE_REPOSITORY_URL",
            "value": "https://github.com/bdecoste/jdv-jdg-sample",
            "required": true
        },
        {
            "description": "Git branch/tag reference",
            "name": "SOURCE_REPOSITORY_REF",
            "value": "master",
            "required": false
        },
        {
            "description": "Path within Git project to build; empty for root project directory.",
            "name": "CONTEXT_DIR",
            "value": "",
            "required": false
        },
        {
            "description": "List of directories from which archives will be copied into the deployment folder.  If unspecified, all archives in /target will be copied.",
            "name": "ARTIFACT_DIR",
            "value": "jdg-remote-cache/target,jdg-remote-cache-materialization/target",
            "required": false
        },
        {
            "description": "Database JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/postgresql",
            "name": "DB_JNDI",
            "value": "java:/accounts-ds",
            "required": false
        },
        {
            "description": "Database name",
            "name": "DB_DATABASE",
            "value": "root",
            "required": true
        },
        {
            "description": "Sets xa-pool/min-pool-size for the configured datasource.",
            "name": "DB_MIN_POOL_SIZE",
            "required": false
        },
        {
            "description": "Sets xa-pool/max-pool-size for the configured datasource.",
            "name": "DB_MAX_POOL_SIZE",
            "required": false
        },
        {
            "description": "Sets transaction-isolation for the configured datasource.",
            "name": "DB_TX_ISOLATION",
            "required": false
        },
        {
            "description": "The maximum number of client connections allowed. This also sets the maximum number of prepared transactions.",
            "name": "POSTGRESQL_MAX_CONNECTIONS",
            "required": false
        },
        {
            "description": "Configures how much memory is dedicated to PostgreSQL for caching data.",
            "name": "POSTGRESQL_SHARED_BUFFERS",
            "required": false
        },
         {
            "description": "Database user name",
            "name": "DB_USERNAME",
            "from": "user[a-zA-Z0-9]{3}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "Database user password",
            "name": "DB_PASSWORD",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "HornetQ cluster admin password",
            "name": "HORNETQ_CLUSTER_PASSWORD",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "GitHub trigger secret",
            "name": "GITHUB_WEBHOOK_SECRET",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "Generic build trigger secret",
            "name": "GENERIC_WEBHOOK_SECRET",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "Namespace in which the ImageStreams for Red Hat Middleware images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.",
            "name": "IMAGE_STREAM_NAMESPACE",
            "value": "openshift",
            "required": true
        },
        {
            "description": "JGroups cluster password",
            "name": "JGROUPS_CLUSTER_PASSWORD",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "description": "Username for Teiid user",
            "name": "TEIID_USERNAME",
            "value": "teiidUser",
            "required": false
        },
        {
            "description": "Password for JDV TEIID_USERNAME",
            "name": "TEIID_PASSWORD",
            "value": "P@ssword1",
            "required": true
        },
        {
            "description": "Username for ModeShape user",
            "name": "MODESHAPE_USERNAME",
            "value": "modeshapeUser",
            "required": false
        },
        {
            "description": "Password for JDV MODESHAPE_USERNAME",
            "name": "MODESHAPE_PASSWORD",
            "value": "P@ssword1",
            "required": true
        },
        {
            "description": "Keystore file for jdbc secure transport",
            "name": "DATAVIRT_TRANSPORT_KEYSTORE",
            "value": "keystore.jks",
            "required": false
        },
        {
            "description": "Alias for jdbc secure transport keystore",
            "name": "DATAVIRT_TRANSPORT_KEYSTORE_ALIAS",
            "value": "jboss",
            "required": false
        },
         {
            "description": "Password for jdbc secure transport keystore",
            "name": "DATAVIRT_TRANSPORT_KEYSTORE_PASSWORD",
            "value": "mykeystorepass",
            "required": false
        },
        {
            "description": "User name for JDG user.",
            "name": "USERNAME",
            "value": "",
            "required": false
        },
        {
            "description": "Password for JDG user.",
            "name": "PASSWORD",
            "value": "",
            "required": false
        },
        {
            "description": "Enable HOTROD Auth",
            "name": "HOTROD_AUTHENTICATION",
            "value": "",
            "required": false
        },
        {
            "description": "Comma-separated list of connector types that should be configured (defaults to 'memcached,hotrod,rest')",
            "name": "INFINISPAN_CONNECTORS",
            "value": "hotrod,memcached,rest",
            "required": false
        },
        {
            "description": "Comma-separated list of caches to configure.  By default, a distributed-cache, with a mode of SYNC will be configured for each entry.",
            "name": "CACHE_NAMES",
            "value": "",
            "required": false
        },
        {
            "description": "",
            "name": "ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH",
            "value": "",
            "required": false
        },
        {
            "description": "The name of the cache to expose through this memcached connector (defaults to 'default')",
            "name": "MEMCACHED_CACHE",
            "value": "memcachedCache",
            "required": false
        },
        {
            "description": "The domain, declared in the security subsystem, that should be used to authenticate access to the REST endpoint",
            "name": "REST_SECURITY_DOMAIN",
            "value": "",
            "required": false
        },
        {
            "description": "List of directories from which VDBS will be copied into the deployment folder.  If unspecified, all archives in source will be copied.",
            "name": "VDB_DIRS",
            "value": "jdg-remote-cache-materialization/src/vdb,dynamicvdb-datafederation/src/vdb",
            "required": false
        }
    ],
    "objects": [
        {
            "kind": "Secret",
            "apiVersion": "v1",
            "metadata": {
                "annotations": {
                    "description": "Default secret file with name 'jboss' and password 'mykeystorepass'"
                },
                "name": "resourceadapters-secret"
            },
            "data": {
                  "resourceadapters.properties": "UkVTT1VSQ0VfQURBUFRFUlM9SkRHCgpKREdfSUQ9aW5maW5pc3BhblJlbVFTRFNMCkpER19NT0RV\nTEVfU0xPVD1tYWluCkpER19NT0RVTEVfSUQ9b3JnLmpib3NzLnRlaWlkLnJlc291cmNlLWFkYXB0\nZXIuaW5maW5pc3Bhbi5kc2wKSkRHX0NPTk5FQ1RJT05fQ0xBU1M9b3JnLnRlaWlkLnJlc291cmNl\nLmFkYXB0ZXIuaW5maW5pc3Bhbi5kc2wuSW5maW5pc3Bhbk1hbmFnZWRDb25uZWN0aW9uRmFjdG9y\neQpKREdfQ09OTkVDVElPTl9KTkRJPWphdmE6L2luZmluaXNwYW5SZW1vdGVEU0wKSkRHX1BST1BF\nUlRZX0NhY2hlVHlwZU1hcD1hZGRyZXNzYm9va19pbmRleGVkOm9yZy5qYm9zcy5hcy5xdWlja3N0\nYXJ0cy5kYXRhZ3JpZC5ob3Ryb2QucXVlcnkuZG9tYWluLlBlcnNvblw7aWQKSkRHX1BST1BFUlRZ\nX1Byb3RvYnVmRGVmaW5pdGlvbkZpbGU9L3F1aWNrc3RhcnQvYWRkcmVzc2Jvb2sucHJvdG8KSkRH\nX1BST1BFUlRZX01lc3NhZ2VEZXNjcmlwdG9yPXF1aWNrc3RhcnQuUGVyc29uCkpER19QUk9QRVJU\nWV9Nb2R1bGU9Y29tLmNsaWVudC5xdWlja3N0YXJ0LmFkZHJlc3Nib29rLnBvam9zCkpER19QUk9Q\nRVJUWV9NZXNzYWdlTWFyc2hhbGxlcnM9b3JnLmpib3NzLmFzLnF1aWNrc3RhcnRzLmRhdGFncmlk\nLmhvdHJvZC5xdWVyeS5kb21haW4uUGVyc29uOm9yZy5qYm9zcy5hcy5xdWlja3N0YXJ0cy5kYXRh\nZ3JpZC5ob3Ryb2QucXVlcnkubWFyc2hhbGxlcnMuUGVyc29uTWFyc2hhbGxlcgpKREdfUFJPUEVS\nVFlfUmVtb3RlU2VydmVyTGlzdD1kYXRhdmlydC1ob3Ryb2QuZGVtby5zdmMuY2x1c3Rlci5sb2Nh\nbDoxMTMzMwoKI1JFU09VUkNFIEFEQVBURVJTCiNSRVNPVVJDRV9BREFQVEVSUz1KREcKCiNKREdf\nSUQ9amF2YTovaW5maW5pc3BhblJlbW90ZUhvdFJvZAojSkRHX01PRFVMRV9TTE9UPW1haW4KI0pE\nR19NT0RVTEVfSUQ9b3JnLmpib3NzLnRlaWlkLnJlc291cmNlLWFkYXB0ZXIuaW5maW5pc3Bhbi5o\nb3Ryb2QKI0pER19DT05ORUNUSU9OX0NMQVNTPW9yZy50ZWlpZC5yZXNvdXJjZS5hZGFwdGVyLmlu\nZmluaXNwYW4uaG90cm9kLkluZmluaXNwYW5NYW5hZ2VkQ29ubmVjdGlvbkZhY3RvcnkKI0pER19D\nT05ORUNUSU9OX0pOREk9amF2YTovaW5maW5pc3BhblJlbW90ZUhvdFJvZAojSkRHX1BST1BFUlRZ\nX0NhY2hlVHlwZU1hcD1kZWZhdWx0Om9yZy5qYm9zcy5hcy5xdWlja3N0YXJ0cy5kYXRhZ3JpZC5o\nb3Ryb2QucXVlcnkuZG9tYWluLlBlcnNvbjtpZAojSkRHX1BST1BFUlRZX01vZHVsZT1jb20uY2xp\nZW50LnF1aWNrc3RhcnQuYWRkcmVzc2Jvb2sucG9qb3MKI0pER19QUk9QRVJUWV9SZW1vdGVTZXJ2\nZXJMaXN0PWRhdGF2aXJ0LWhvdHJvZC5kZW1vLnN2Yy5jbHVzdGVyLmxvY2FsOjExMzMzCg=="
            }
        },
        {
            "kind": "Secret",
            "apiVersion": "v1",
            "metadata": {
                "annotations": {
                    "description": "Default secret file with name 'jboss' and password 'mykeystorepass'"
                },
                "name": "configure-secret"
            },
            "data": {
                  "preconfigure.sh": "IyEvYmluL2Jhc2gKCnNldCAteAoKZWNobyAiISEhISEhISEhISEhISEhISEgcHJlL3Bvc3QgcnVu\ndGltZSBjb25maWd1cmUiCmNhdCAvb3B0L2VhcC9zdGFuZGFsb25lL2NvbmZpZ3VyYXRpb24vc3Rh\nbmRhbG9uZS1vcGVuc2hpZnQueG1sCg==",
                  "postconfigure.sh": "IyEvYmluL2Jhc2gKCnNldCAteAoKZWNobyAiISEhISEhISEhISEhISEhISEgcHJlL3Bvc3QgcnVu\ndGltZSBjb25maWd1cmUiCmNhdCAvb3B0L2VhcC9zdGFuZGFsb25lL2NvbmZpZ3VyYXRpb24vc3Rh\nbmRhbG9uZS1vcGVuc2hpZnQueG1sCgpQR1BBU1NXT1JEPSRQT1NUR1JFU1FMX1BBU1NXT1JEIC91\nc3IvYmluL3BzcWwgLWggJERBVEFWSVJUX1BPU1RHUkVTUUxfU0VSVklDRV9IT1NUIC1kICRQT1NU\nR1JFU1FMX0RBVEFCQVNFIC1VICRQT1NUR1JFU1FMX1VTRVJOQU1FIC1mICR7SE9NRX0vc291cmNl\nL2luamVjdGVkL2luamVjdGVkLWZpbGVzL2N1c3RvbWVyLXNjaGVtYS1wZy5zcWwK"
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "port": 8080,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "The web server's http port."
                }
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "port": 31000,
                        "targetPort": 31000
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "metadata": {
                "name": "jdbc-${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "The Teiid jdbc port."
                }
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "port": 31443,
                        "targetPort": 31443
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "metadata": {
                "name": "securejdbc-${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "The Teiid jdbc port."
                }
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "port": 5432,
                        "targetPort": 5432
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-postgresql"
                }
            },
            "metadata": {
                "name": "${APPLICATION_NAME}-postgresql",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "The database server's port."
                }
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "port": 11211,
                        "targetPort": 11211
                    }
                ],
                "selector": {
                    "deploymentConfig": "jdg"
                }
            },
            "metadata": {
                "name": "${APPLICATION_NAME}-memcached",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Memcached service for clustered applications."
                }
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [
                    {
                        "port": 11333,
                        "targetPort": 11333
                    }
                ],
                "selector": {
                    "deploymentConfig": "jdg"
                }
            },
            "metadata": {
                "name": "${APPLICATION_NAME}-hotrod",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Hot Rod service for clustered applications."
                }
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-http",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Route for application's http service."
                }
            },
            "spec": {
                "host": "${HOSTNAME_HTTP}",
                "to": {
                    "name": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-jdbc",
            "metadata": {
                "name": "jdbc-${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "annotations": {
                    "description": "Route for application's jdbc service."
                }
            },
            "spec": {
                "host": "${HOSTNAME_HTTPS}",
                "to": {
                    "name": "jdbc-${APPLICATION_NAME}"
                },
                "tls": {
                    "termination": "passthrough"
                }
            }
        },
        {
            "kind": "ImageStream",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "kind": "ImageStream",
            "apiVersion": "v1",
            "metadata": {
                "name": "jdg",
                "labels": {
                    "application": "jdg"
                }
            }
        },
        {
            "kind": "ImageStream",
            "apiVersion": "v1",
            "metadata": { 
                "name": "jdv-jdg-extensions",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "tags": [
                    {
                        "name": "1.0",
                        "annotations": {
                            "supports":"jdv-jdg-extensions:1.0",
                            "version": "1.0"
                        }
                    }
                ]
            }
        },
        {
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "jdv-jdg-extensions",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "source": {
                    "type": "Git",
                    "git": {
                        "uri": "http://github.com/bdecoste/jdv-jdg-sample",
                        "ref": ""
                    },
                    "contextDir": ""
                },
                "strategy": {
                    "type": "Docker",
                    "dockerfilePath": "Dockerfile"
                },
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "namespace": "demo",
                        "name": "jdv-jdg-extensions:1.0"
                    }
                },
                "triggers": [
                    {
                        "type": "GitHub",
                        "github": {
                            "secret": "${GITHUB_WEBHOOK_SECRET}"
                        }
                    },
                    {
                        "type": "Generic",
                        "generic": {
                            "secret": "${GENERIC_WEBHOOK_SECRET}"
                        }
                    },
                    {
                        "type": "ImageChange",
                        "imageChange": {}
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        },
        {
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "source": {
                    "type": "Git",
                    "git": {
                        "uri": "${SOURCE_REPOSITORY_URL}",
                        "ref": "${SOURCE_REPOSITORY_REF}"
                    },
                    "contextDir": "${CONTEXT_DIR}",
                    "images": [
                        {
                            "from": {
                                "kind": "ImageStreamTag",
                                "namespace": "demo",
                                "name": "jdv-jdg-extensions:1.0"
                            },
                            "paths": [
                                {
                                    "destinationDir": ".",
                                    "sourcePath": "/injected"
                                }
                             ]
                        }
                    ]
                },
                "strategy": {
                    "type": "Source",
                    "sourceStrategy": {
                        "forcePull": true,
                        "from": {
                            "kind": "ImageStreamTag",
                            "namespace": "${IMAGE_STREAM_NAMESPACE}",
                            "name": "jboss-datavirt63-openshift:1.1"
                        },
                         "env": [
                            {
                                "name": "ARTIFACT_DIR",
                                "value": "${ARTIFACT_DIR}"
                            },
                            {
                                "name": "CUSTOM_INSTALL_DIRECTORIES",
                                "value": "injected"
                            },
                            {
                                "name": "VDB_DIRS",
                                "value": "${VDB_DIRS}"
                            }
                        ]
                    }
                },
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "${APPLICATION_NAME}:latest"
                    }
                },
                "triggers": [
                    {
                        "type": "GitHub",
                        "github": {
                            "secret": "${GITHUB_WEBHOOK_SECRET}"
                        }
                    },
                    {
                        "type": "Generic",
                        "generic": {
                            "secret": "${GENERIC_WEBHOOK_SECRET}"
                        }
                    },
                    {
                        "type": "ImageChange",
                        "imageChange": {}
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Recreate"
                },
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "${APPLICATION_NAME}"
                            ],
                            "from": {
                                "kind": "ImageStream",
                                "name": "${APPLICATION_NAME}"
                            }
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                },
                "template": {
                    "metadata": {
                        "name": "${APPLICATION_NAME}",
                        "labels": {
                            "deploymentConfig": "${APPLICATION_NAME}",
                            "application": "${APPLICATION_NAME}"
                        }
                    },
                    "spec": {
                        "terminationGracePeriodSeconds": 60,
                        "containers": [
                            {
                                "name": "${APPLICATION_NAME}",
                                "image": "${APPLICATION_NAME}",
                                "imagePullPolicy": "Always",
                                "volumeMounts": [
                                    {
                                        "name": "teiid-keystore-volume",
                                        "mountPath": "/etc/teiid-secret-volume",
                                        "readOnly": true
                                    },
                                    {
                                        "name": "jdv-resourceadapters-volume",
                                        "mountPath": "/etc/jdv-extensions",
                                        "readOnly": true
                                    },
                                    {
                                        "name": "config-volume",
                                        "mountPath": "/opt/eap/extensions",
                                        "readOnly": false
                                    }
                                ],
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/eap/bin/livenessProbe.sh"
                                        ]
                                    }
                                },
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/eap/bin/readinessProbe.sh"
                                        ]
                                    }
                                },
                                "ports": [
                                    {
                                        "name": "jolokia",
                                        "containerPort": 8778,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "http",
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "ping",
                                        "containerPort": 8888,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "jdbc",
                                        "containerPort": 31000,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "secure-jdbc",
                                        "containerPort": 31443,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "APPLICATION_NAME",
                                        "value": "${APPLICATION_NAME}"
                                    },
                                    {
                                        "name": "DB_SERVICE_PREFIX_MAPPING",
                                        "value": "${APPLICATION_NAME}-postgresql=POSTGRESQL"
                                    },
                                    {
                                        "name": "POSTGRESQL_JNDI",
                                        "value": "${DB_JNDI}"
                                    },
                                    {
                                        "name": "POSTGRESQL_USERNAME",
                                        "value": "${DB_USERNAME}"
                                    },
                                    {
                                        "name": "POSTGRESQL_PASSWORD",
                                        "value": "${DB_PASSWORD}"
                                    },
                                    {
                                        "name": "POSTGRESQL_DATABASE",
                                        "value": "${DB_DATABASE}"
                                    },
                                    {
                                        "name": "TX_DATABASE_PREFIX_MAPPING",
                                        "value": "${APPLICATION_NAME}-postgresql=POSTGRESQL"
                                    },
                                    {
                                        "name": "POSTGRESQL_MIN_POOL_SIZE",
                                        "value": "${DB_MIN_POOL_SIZE}"
                                    },
                                    {
                                        "name": "POSTGRESQL_MAX_POOL_SIZE",
                                        "value": "${DB_MAX_POOL_SIZE}"
                                    },
                                    {
                                        "name": "POSTGRESQL_TX_ISOLATION",
                                        "value": "${DB_TX_ISOLATION}"
                                    },
                                    {
                                        "name": "OPENSHIFT_KUBE_PING_LABELS",
                                        "value": "application=${APPLICATION_NAME}"
                                    },
                                    {
                                        "name": "OPENSHIFT_KUBE_PING_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "HORNETQ_CLUSTER_PASSWORD",
                                        "value": "${HORNETQ_CLUSTER_PASSWORD}"
                                    },
                                    {
                                        "name": "JGROUPS_CLUSTER_PASSWORD",
                                        "value": "${JGROUPS_CLUSTER_PASSWORD}"
                                    },
                                    {
                                        "name": "TEIID_USERNAME",
                                        "value": "${TEIID_USERNAME}"
                                    },
                                    {
                                        "name": "TEIID_PASSWORD",
                                        "value": "${TEIID_PASSWORD}"
                                    },
                                    {
                                        "name": "MODESHAPE_USERNAME",
                                        "value": "${MODESHAPE_USERNAME}"
                                    },
                                    {
                                        "name": "MODESHAPE_PASSWORD",
                                        "value": "${MODESHAPE_PASSWORD}"
                                    },
                                    {
                                        "name": "DATAVIRT_TRANSPORT_KEYSTORE",
                                        "value": "/etc/teiid-secret-volume/${DATAVIRT_TRANSPORT_KEYSTORE}"
                                    },
                                    {
                                        "name": "DATAVIRT_TRANSPORT_KEYSTORE_ALIAS",
                                        "value": "${DATAVIRT_TRANSPORT_KEYSTORE_ALIAS}"
                                    },
                                    {
                                        "name": "DATAVIRT_TRANSPORT_KEYSTORE_PASSWORD",
                                        "value": "${DATAVIRT_TRANSPORT_KEYSTORE_PASSWORD}"
                                    },
                                    {
                                        "name": "ENV_FILES",
                                        "value": "/etc/jdv-extensions/resourceadapters.properties"
                                    }
                                ]
                            }
                        ],
                        "volumes": [
                            {
                                "name": "teiid-keystore-volume",
                                "secret": {
                                    "secretName": "datavirt-app-secret"
                                }
                            },
                            {
                                "name": "jdv-resourceadapters-volume",
                                "secret": {
                                    "secretName": "resourceadapters-secret"
                                }
                            },
                            {
                                "name": "config-volume",
                                "secret": {
                                    "secretName": "configure-secret"
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "jdg",
                "labels": {
                    "application": "jdg"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Recreate"
                },
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "jdg"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "namespace": "${IMAGE_STREAM_NAMESPACE}",
                                "name": "jboss-datagrid65-openshift:1.3"
                            }
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "selector": {
                    "deploymentConfig": "jdg"
                },
                "template": {
                    "metadata": {
                        "name": "jdg",
                        "labels": {
                            "deploymentConfig": "jdg",
                            "application": "${APPLICATION_NAME}"
                        }
                    },
                    "spec": {
                        "terminationGracePeriodSeconds": 60,
                        "containers": [
                            {
                                "name": "jdg",
                                "image": "jboss-datagrid65-openshift",
                                "imagePullPolicy": "Always",
                                "ports": [
                                    {
                                        "name": "jolokia",
                                        "containerPort": 8778,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "http",
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "ping",
                                        "containerPort": 8888,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "memcached",
                                        "containerPort": 11211,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "hotrod",
                                        "containerPort": 11333,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "USERNAME",
                                        "value": "${USERNAME}"
                                    },
                                    {
                                        "name": "PASSWORD",
                                        "value": "${PASSWORD}"
                                    },
                                    {
                                        "name": "OPENSHIFT_KUBE_PING_LABELS",
                                        "value": "application=${APPLICATION_NAME}"
                                    },
                                    {
                                        "name": "OPENSHIFT_KUBE_PING_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "INFINISPAN_CONNECTORS",
                                        "value": "${INFINISPAN_CONNECTORS}"
                                    },
                                    {
                                        "name": "CACHE_NAMES",
                                        "value": "${CACHE_NAMES}"
                                    },
                                    {
                                        "name": "ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH",
                                        "value": "${ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH}"
                                    },
                                    {
                                        "name": "HOTROD_SERVICE_NAME",
                                        "value": "${APPLICATION_NAME}-hotrod"
                                    },
                                    {
                                        "name": "MEMCACHED_CACHE",
                                        "value": "${MEMCACHED_CACHE}"
                                    },
                                    {
                                        "name": "REST_SECURITY_DOMAIN",
                                        "value": "${REST_SECURITY_DOMAIN}"
                                    },
                                    {
                                        "name": "JGROUPS_CLUSTER_PASSWORD",
                                        "value": "${JGROUPS_CLUSTER_PASSWORD}"
                                    },
                                    {
                                        "name": "DATAVIRT_CACHE_NAMES",
                                        "value": "addressbook"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APPLICATION_NAME}-postgresql",
                "labels": {
                    "application": "${APPLICATION_NAME}"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Recreate"
                },
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "${APPLICATION_NAME}-postgresql"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "namespace": "${IMAGE_STREAM_NAMESPACE}",
                                "name": "postgresql:latest"
                            }
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-postgresql"
                },
                "template": {
                    "metadata": {
                        "name": "${APPLICATION_NAME}-postgresql",
                        "labels": {
                            "deploymentConfig": "${APPLICATION_NAME}-postgresql",
                            "application": "${APPLICATION_NAME}"
                        }
                    },
                    "spec": {
                        "terminationGracePeriodSeconds": 60,
                        "containers": [
                            {
                                "name": "${APPLICATION_NAME}-postgresql",
                                "image": "postgresql",
                                "imagePullPolicy": "Always",
                                "ports": [
                                    {
                                        "containerPort": 5432,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "POSTGRESQL_USER",
                                        "value": "${DB_USERNAME}"
                                    },
                                    {
                                        "name": "POSTGRESQL_PASSWORD",
                                        "value": "${DB_PASSWORD}"
                                    },
                                    {
                                        "name": "POSTGRESQL_DATABASE",
                                        "value": "${DB_DATABASE}"
                                    },
                                    {
                                        "name": "POSTGRESQL_MAX_CONNECTIONS",
                                        "value": "${POSTGRESQL_MAX_CONNECTIONS}"
                                    },
                                    {
                                        "name": "POSTGRESQL_MAX_PREPARED_TRANSACTIONS",
                                        "value": "${POSTGRESQL_MAX_CONNECTIONS}"
                                    },
                                    {
                                        "name": "POSTGRESQL_SHARED_BUFFERS",
                                        "value": "${POSTGRESQL_SHARED_BUFFERS}"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        }
    ]
}
